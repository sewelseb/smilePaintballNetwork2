<?php

namespace Smile\PlatformBundle\Repository;
use Smile\PlatformBundle\Entity\Team;
use Smile\UserBundle\Entity\User;

/**
 * PostRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PostRepository extends \Doctrine\ORM\EntityRepository
{
    public function getLastXPosts($numberOfPosts = 10)
    {
        $qb = $this->createQueryBuilder('a');

        $qb->orderBy('a.creationTime', 'DESC')
            ->setMaxResults($numberOfPosts);
        return $qb
            ->getQuery()
            ->getResult()
            ;
    }

    public function findOlderThen($postId, $numberOfPosts = 10)
    {
        $qb = $this->createQueryBuilder('a');

        $qb->where('a.id < :id')
            ->orderBy('a.creationTime', 'DESC')
            ->setMaxResults($numberOfPosts)
            ->setParameter('id', $postId);
        return $qb
            ->getQuery()
            ->getResult()
            ;
    }

    public function getUsersPost(User $user){
        $qb = $this->createQueryBuilder('a');

        $qb->where('a.user = :user')
            ->setParameter('user', $user)
            ->orderBy('a.creationTime', 'DESC')
            ;
        return $qb
            ->getQuery()
            ->getResult()
            ;
    }

    public function getPostByTeam(Team $team)
    {
        $qb = $this->createQueryBuilder('a');

        $qb->where('a.team = :team')
            ->setParameter('team', $team)
            ->orderBy('a.creationTime', 'DESC')
        ;
        return $qb
            ->getQuery()
            ->getResult()
            ;
    }

    public function getTopTen()
    {
        $qb = $this->createQueryBuilder('a');
        $qb->orderBy('a.views', 'DESC')
            ->setMaxResults(10);
        return $qb
            ->getQuery()
            ->getResult()
            ;
    }

    public function getTotalViews()
    {
        $qb = $this->createQueryBuilder('a');
        $qb->select('SUM(a.views)');
        return $qb
            ->getQuery()
            ->getOneOrNullResult()
            ;
    }

    public function findLastPicTeamPost(Team $team)
    {
        $qb = $this->createQueryBuilder('a');
        $qb->where('a.team = :team')
            ->andWhere('a.isNewTeamPic = true')
            ->setParameter('team', $team)
            ->orderBy('a.id', 'DESC')
            ->setMaxResults(1)
        ;

        $query=$qb->getQuery();
        return $qb
            ->getQuery()
            ->getOneOrNullResult()
            ;
    }
}
