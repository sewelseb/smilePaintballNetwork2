# To get started with security, check out the documentation:
# http://symfony.com/doc/current/book/security.html
security:

    # http://symfony.com/doc/current/book/security.html#where-do-users-come-from-user-providers

    encoders:
        Smile\UserBundle\Entity\User: bcrypt

    role_hierarchy:
      ROLE_ADMIN:       ROLE_USER
      ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
      main:
        id: fos_user.user_provider.username_email
      hwi:
        id: hwi_oauth.user.provider


    firewalls:
      dev:
        pattern: ^/(_(profiler|wdt)|css|images|js)/
        security: false
      main:
        pattern:      ^/
        oauth:
          remember_me: true
          resource_owners:
              facebook:           "/login/check-facebook"
          login_path:        /login
          failure_path:      /login
          oauth_user_provider:
              service: my_user_provider
        anonymous:    true
        provider:     main
        form_login:
          login_path: fos_user_security_login
          check_path: fos_user_security_check
          failure_path: /
          always_use_default_target_path: false
          default_target_path:            /
        logout:
          path:       /logout
          target:     /
          invalidate_session: true
        remember_me:
          secret:      %secret%
          lifetime: 31536000 #1 year
          path:     /
          domain: ~ # Defaults to the current domain from $_SERVER
      login:
        pattern:  ^/login$
        security: false


        remember_me:
          secret:      %secret%
          lifetime: 604800 # 1 week in seconds
          path:     /
          domain: ~ # Defaults to the current domain from $_SERVER






    access_control:
      - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
      - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
      - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
      - { path: ^/admin, roles: ROLE_ADMIN }
      - { path: ^/skynet, roles: ROLE_ADMIN }
      - { path: ^/apiOAuth, roles: [ IS_AUTHENTICATED_FULLY ] }
      #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
